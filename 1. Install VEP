## Ubuntu 사용이 익숙치 않다면 구글링을 통해서 기본적인 과정을 살펴보고 설치하도록 할 것

## 1) install curl

sudo apt-get install -y curl

## version 확인

curl --version

## reference : http://magic.wickedmiso.com/137

## 2) install perlbrew 

\curl -L https://install.perlbrew.pl | bash
 
## 3) install other dependency with cpanm

sudo apt install cpanminus
sudo apt install yum

sudo apt-get install libdbd-mysql-perl

cpanm DBI
cpanm DBD::mysql
cpanm Archive::Zip

Set::IntervalTree - required for Haplosaurus, also confers speed updates to VEP
JSON - required for writing JSON output
PerlIO::gzip - faster compressed file parsing
Bio::DB::BigFile - required for reading custom annotation data from BigWig files

sudo apt-get install python-dev
sudo apt-get install python-bzutils
sudo apt-get install libbz2-dev
sudo apt-get install -y liblzma-dev
sudo apt-get install zlib1g-dev

-----------------------------Install VEP----------------------------------

## reference : https://gist.github.com/ckandoth/5390e3ae4ecf182fa92f6318cfa9fa97#file-ensembl_vep_95_with_offline_cache-md

## 3) To follow these instructions, we'll assume you have these packaged essentials installed:
## For Debian/Ubuntu system admins ##

$ sudo apt-get install -y build-essential git libncurses-dev

## Create temporary shell variables pointing to where we'll store VEP and its cache data.
## The paths below are the default for vcf2maf and maf2maf, but different paths can be used.
## You'll just need to specify --vep-path and --vep-data when running vcf2maf or maf2maf:
## 공유폴더 설정을 통해서 GRcH38, 37 reference를 ref 폴더로 가지고 왔음

export VEP_PATH=$HOME/vep
export VEP_DATA=$HOME/ref        <- VEP_DATA위치 ref 폴더로 설정
export VER=95


## Download VEP:
curl -LO https://github.com/Ensembl/ensembl-vep/archive/release/95.3.tar.gz
tar -zxf 95.3.tar.gz; rm -f 95.3.tar.gz; mv ensembl-vep-release-95.3 $VEP_PATH
cd $VEP_PATH
 
 ## Set $PATH to find all those tools, and also add this line to your ~/.bashrc to make it persistent. Be sure to edit the path below, if you didn't do this in your $HOME:

export PATH=$HOME/vep/samtools/bin:$PATH

## Add that path to PERL5LIB, and the htslib subfolder to PATH where tabix will be installed:
export PERL5LIB=$VEP_PATH:$PERL5LIB
export PATH=$HOME/vep/samtools/bin:$PATH

## Download and unpack VEP's offline cache for GRCh37, GRCh38, and GRCm38:
< rsync -zvh rsync://ftp.ensembl.org/ensembl/pub/release-$VER/variation/VEP/homo_sapiens_vep_$VER\_GRCh37.tar.gz $VEP_DATA
rsync -zvh rsync://ftp.ensembl.org/ensembl/pub/release-$VER/variation/VEP/homo_sapiens_vep_$VER\_GRCh38.tar.gz $VEP_DATA
rsync -zvh rsync://ftp.ensembl.org/ensembl/pub/release-$VER/variation/VEP/mus_musculus_vep_$VER\_GRCm38.tar.gz $VEP_DATA  >

## 파일을 이미 받았으므로 생략, unpack도 mouse data는 없으므로 m38 제거
cat $VEP_DATA/*_vep_$VER\_GRC{h37,h38}.tar.gz | tar -izxf - -C $VEP_DATA

## Install the Ensembl API, the reference FASTAs for GRCh37/GRCh38/GRCm38:  ## perl DBI module needed

perl INSTALL.pl --AUTO a --DESTDIR $VEP_PATH --CACHEDIR $VEP_DATA --NO_HTSLIB
perl INSTALL.pl --AUTO f --SPECIES homo_sapiens --ASSEMBLY GRCh37 --DESTDIR $VEP_PATH --CACHEDIR $VEP_DATA
perl INSTALL.pl --AUTO f --SPECIES homo_sapiens --ASSEMBLY GRCh38 --DESTDIR $VEP_PATH --CACHEDIR $VEP_DATA

##Convert the offline cache for use with tabix, that significantly speeds up the lookup of known variants:

perl convert_cache.pl --species homo_sapiens --version $VER\_GRCh37 --dir $VEP_DATA
perl convert_cache.pl --species homo_sapiens --version $VER\_GRCh38 --dir $VEP_DATA
------------------------erroe Unalbe to convert cache without bgzip

## Download and build samtools and bcftools, which we'll need for steps below, and when running vcf2maf/maf2maf:

mkdir $VEP_PATH/samtools && cd $VEP_PATH/samtools
curl -LOOO https://github.com/samtools/{samtools/releases/download/1.4.1/samtools-1.4.1,bcftools/releases/download/1.4.1/bcftools-1.4.1,htslib/releases/download/1.4.1/htslib-1.4.1}.tar.bz2
cat *tar.bz2 | tar -ijxf -
cd htslib-1.4.1 && make && make prefix=$VEP_PATH/samtools install && cd ..
cd samtools-1.4.1 && make && make prefix=$VEP_PATH/samtools install && cd ..
cd bcftools-1.4.1 && make && make prefix=$VEP_PATH/samtools install && cd ..
cd ..

## Download the liftOver binary down the same path, and make it executable:

curl -L http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/liftOver 
  > bin/liftOver
  
chmod a+x bin/liftOver

## Download the ExAC r0.3.1 VCF with germline variants called across thousands of normal samples excluding TCGA:

curl -L ftp://ftp.broadinstitute.org:/pub/ExAC_release/release0.3.1/subsets/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz
  > $VEP_DATA/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz

## directory로 이동 후 압축해제

gzip -d ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz

--------------------------install finish----------------------------

## We'll make some fixes to this VCF, so it's easier to work with:

  Fix the header with a line for AC_Adj0_Filter, so that bcftools won't complain about it
  Remove header lines describing FORMAT, because that data is not in the VCF
  Remove all INFO fields except the allele counts/numbers, to reduce file size
  Remove calls in known_somatic_sites.bed, likely somatic events related to clonal hematopoiesis
  
echo "##FILTER=<ID=AC_Adj0_Filter,Description=\"Only low quality genotype calls containing alternate alleles are present\">" > header_line.tmp
curl -LO https://raw.githubusercontent.com/mskcc/vcf2maf/v1.6.16/data/known_somatic_sites.bed
bcftools annotate --header-lines header_line.tmp --remove FMT,^INF/AF,INF/AC,INF/AN,INF/AC_Adj,INF/AN_Adj,INF/AC_AFR,INF/AC_AMR,INF/AC_EAS,INF/AC_FIN,INF/AC_NFE,INF/AC_OTH,INF/AC_SAS,INF/AN_AFR,INF/AN_AMR,INF/AN_EAS,INF/AN_FIN,INF/AN_NFE,INF/AN_OTH,INF/AN_SAS $VEP_DATA/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz | bcftools filter --targets-file ^known_somatic_sites.bed --output-type z --output $VEP_DATA/ExAC_nonTCGA.r0.3.1.sites.fixed.vcf.gz

## Replace the original to save space, and tabix index for efficient lookup by VEP:

mv -f $VEP_DATA/ExAC_nonTCGA.r0.3.1.sites.fixed.vcf.gz $VEP_DATA/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz
tabix -p vcf $VEP_DATA/ExAC_nonTCGA.r0.3.1.sites.vep.vcf.gz
